<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iwc.shop.modules.shop.dao.OrderDao">
    
	<sql id="columns">
		a.id AS "id",
        a.cart_id AS "cart.id",
        a.cookie_id AS "cookie.id",
        a.preorder_id AS "preorder.id",
        a.area_id AS "area.id",
        a.area_name AS "areaName",
        a.area_parent_id AS "areaParentId",
        a.area_path_ids AS "areaPathIds",
        a.area_path_names AS "areaPathNames",
        a.area_simple_name AS "areaSimpleName",
        a.area_zip_code AS "areaZipCode",
        a.store_id AS "storeId",
        a.ip AS "ip",
		a.total_count AS "totalCount",
		a.total_price AS "totalPrice",
        a.address_fullname AS "addressFullname",
        a.address_telephone AS "addressTelephone",
        a.address_detail AS "addressDetail",
        a.serial_no AS "serialNo",
        a.print_count AS "printCount",
		a.user_id AS "user.id",
		a.coupon_user_id AS "couponUser.id",
		a.coupon_user_total_price AS "couponUserTotalPrice",
		a.origin_total_price AS "originTotalPrice",
		a.address_id AS "addressId",
		a.notice,
		a.has_paid AS "hasPaid",
		a.paid_date AS "paidDate",
		a.pay_type AS "payType",
		a.rough_pay_type AS "roughPayType",
		a.status_id AS "orderStatus.id",
		a.status_union AS "statusUnion",
		a.op_transaction_id AS "opTransactionId",
		a.min_total_price_label AS "minTotalPriceLabel",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>

	<insert id="insert">
		INSERT INTO shop_order(
            id,
            cart_id,
            cookie_id,
            preorder_id,
            area_id,
            area_name,
            area_parent_id,
            area_path_ids,
            area_path_names,
            area_simple_name,
            area_zip_code,
            store_id,
            ip,
            total_count,
            total_price,
            address_fullname,
            address_telephone,
            address_detail,
            serial_no,
            print_count,
			user_id,
    		coupon_user_id,
	    	coupon_user_total_price,
		    origin_total_price,
		    address_id,
		    notice,
		    has_paid,
		    paid_date,
		    pay_type,
		    rough_pay_type,
            status_id,
            status_union,
            op_transaction_id,
            min_total_price_label,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag)
		VALUES (
            #{id},
            #{cart.id},
            #{cookie.id},
            #{preorder.id},
            #{area.id},
            #{areaName},
            #{areaParentId},
            #{areaPathIds},
            #{areaPathNames},
            #{areaSimpleName},
            #{areaZipCode},
            #{storeId},
            #{ip},
            #{totalCount},
            #{totalPrice},
            #{addressFullname},
            #{addressTelephone},
            #{addressDetail},
            #{serialNo},
            #{printCount},
			#{user.id},
            #{couponUser.id},
            #{couponUserTotalPrice},
            #{originTotalPrice},
            #{addressId},
            #{notice},
            #{hasPaid},
            #{paidDate},
            #{payType},
            #{roughPayType},
            #{orderStatus.id},
            #{statusUnion},
            #{opTransactionId},
            #{minTotalPriceLabel},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag})
	</insert>

	<update id="update">
		UPDATE shop_order SET
            cart_id = #{cart.id},
            cookie_id = #{cookie.id},
            preorder_id = #{preorder.id},
            area_id = #{area.id},
            area_name = #{areaName},
            area_parent_id = #{areaParentId},
            area_path_ids = #{areaPathIds},
            area_path_names = #{areaPathNames},
            area_simple_name = #{areaSimpleName},
            area_zip_code = #{areaZipCode},
            store_id = #{storeId},
            ip = #{ip},
            total_count = #{totalCount},
            total_price = #{totalPrice},
            address_fullname = #{addressFullname},
            address_telephone = #{addressTelephone},
            address_detail = #{addressDetail},
            serial_no = #{serialNo},
            print_count = #{printCount},
			user_id = #{user.id},
            coupon_user_id = #{couponUser.id},
            coupon_user_total_price = #{couponUserTotalPrice},
            origin_total_price = #{originTotalPrice},
            address_id = #{addressId},
            notice = #{notice},
            has_paid = #{hasPaid},
            paid_date = #{paidDate},
            pay_type = #{payType},
            rough_pay_type = #{roughPayType},
            status_id = #{orderStatus.id},
            status_union = #{statusUnion},
            op_transaction_id = #{opTransactionId},
            min_total_price_label = #{minTotalPriceLabel},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			del_flag = #{delFlag}
		WHERE id = #{id}
	</update>

    <select id="get" resultType="Order">
        SELECT
        <include refid="columns"/>
        FROM shop_order a
        WHERE a.id = #{id}
    </select>

	<update id="delete">
		UPDATE shop_order SET
			del_flag = #{delFlag}
		WHERE id = #{id}
	</update>

    <select id="getByPreorderId" resultType="Order">
        SELECT
        <include refid="columns"/>
        FROM shop_order a
        <where>
            a.del_flag = #{delFlag}
            AND a.preorder_id = #{preorder.id}
            AND a.preorder_id IS NOT NULL
        </where>
        LIMIT 1
    </select>
    <select id="findList_order" resultType="Order">
        SELECT
        <include refid="columns"/>
        FROM shop_order a
        <where>
            1 = 1
            <if test="user != null and user.id != null and user.id != ''">
                AND a.user_id = #{user.id}
            </if>
            <if test="storeId != null and storeId != ''">
                AND a.store_id = #{storeId}
            </if>
            <if test="sqlMap != null and sqlMap.where != null and sqlMap.where != ''">
                AND ${sqlMap.where}
            </if>
            <if test="delFlag != null and delFlag != ''">
                AND a.del_flag = #{delFlag}
            </if>
        </where>

        ORDER BY a.create_date DESC
        <!--<if test="page != null">-->
        <if	test="beginIndex != null and endIndex != null ">
             limit #{beginIndex},#{endIndex}
        </if>
        <!--LIMIT ${page.pageNo},${page.pageSize}-->
        <!--</if>-->
    </select>
	<select id="findList" resultType="Order">
		SELECT 
			<include refid="columns"/>
		FROM shop_order a
		<where>
            1 = 1
            <if test="user != null and user.id != null and user.id != ''">
                AND a.user_id = #{user.id}
            </if>
            <if test="storeId != null and storeId != ''">
                AND a.store_id = #{storeId}
            </if>
            <if test="sqlMap != null and sqlMap.where != null and sqlMap.where != ''">
                AND ${sqlMap.where}
            </if>
            <if test="delFlag != null and delFlag != ''">
                AND a.del_flag = #{delFlag}
            </if>
		</where>
		<choose>
			<when test="page != null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date DESC
			</otherwise>

		</choose>

        <!--<if test="page != null">-->
        <!--<if	test="beginIndex != null and endIndex != null ">-->
            <!--limit #{beginIndex},#{endIndex}-->
        <!--</if>-->
            <!--LIMIT ${page.pageNo},${page.pageSize}-->
        <!--</if>-->
    </select>

    <select id="getOldestUnPrint" resultType="Order">
        SELECT
          <include refid="columns"/>
        FROM shop_order a
        WHERE (a.print_count = #{printCount} OR a.print_count IS NULL) AND a.del_flag = #{DEL_FLAG_NORMAL}
        ORDER BY a.create_date ASC
        LIMIT 1
    </select>

    <!--
        1, 在线支付，没有付款不能打印
        2, 现金支付，下单就能打印
    -->
    <select id="getOldest4AutoPrint" resultType="Order">
        SELECT
        <include refid="columns"/>
        FROM shop_order a
        <where>
            (a.print_count = #{printCount} OR a.print_count IS NULL)
            AND (a.rough_pay_type = #{ROUGH_PAY_TYPE_CASH} OR (a.rough_pay_type = #{ROUGH_PAY_TYPE_OP} AND a.has_paid = "1"))
            AND a.del_flag = #{DEL_FLAG_NORMAL}
        </where>
        ORDER BY a.create_date ASC
        LIMIT 1
    </select>

    <!--
        1, 在线支付，没有付款不能打印
        2, 现金支付，下单就能打印
    -->
    <select id="getOldest4AutoPrintByStoreId" resultType="Order">
        SELECT
        <include refid="columns"/>
        FROM shop_order a
        <where>
            (a.print_count = #{printCount} OR a.print_count IS NULL)
            AND a.store_id = #{storeId}
            AND (a.rough_pay_type = #{ROUGH_PAY_TYPE_CASH} OR (a.rough_pay_type = #{ROUGH_PAY_TYPE_OP} AND a.has_paid = "1"))
            AND a.del_flag = #{DEL_FLAG_NORMAL}
        </where>
        ORDER BY a.create_date ASC
        LIMIT 1
    </select>
</mapper>